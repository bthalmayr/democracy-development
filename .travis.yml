env:
  global:
  # SECRET
  - secure: "Xnbd0sTkr30NF/IPozUZs5Uks8V7uizIfuIoERUXy7IN4FfBuc+x+v2HR4Unho8eFh6TNDB3LA+b28Ce4aEajrxuVablLunBTLy/z48A5cyDg8dK2mXEA2iBLYTNei4BT+OBABHtmYd9uEmVTzeq07GPsb2N83LqIwSVAjZSuVJlVgT3a+j1fQrlTE3IjhgM+MaEYR8OaM/+tde5/TH3+lhBM7k71Jfw4a/no7VC1T9fnZ5MlpzZT4rqvl0OgesLrpRnyWlgbPrnrUZRR8h6+p/On9G1Azg5bF8UAfdZloez05zCT54u69tHiA6UdY24ytZtnlgcQmJ40k/NYitjzgiuJ9d7NN1YRhx5qApXdwYrt7D+9ElKuIORMnOIOe9uiUs/MlQ0Llbu51oPUUj/vUYUvhXU1XBY7yvgV1pWB6klW+xXMK+wNd+fze2EHotr0y7DX7+441OohwVC5YIFahdD4rTjHpEqolAhEH6j5y4/T0Gx/jcT/TJKUwPeR3/q71k5OxtRSgtNdxSlZnmAKLEiexS7lGkyE4/dfzxuqxzlyXaGDeAXcduwKs9H4SbZXPjMMIH4KSoOjMw3FMNyN2xJsdi/+fLqq9DAwQLgleRM0bLQCzQfRSjUzqV+6TfYGLBkqRNh8vlFy1orrebnzhVz11RO2FtGhy8tMdhCRyA="
matrix:
  include:
  # ########################
  # TESTING
  # ########################
  # basic docker build test
  - if: tag IS blank
    os: linux
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    script:
    - docker-compose build
  
  # ########################
  # CHECK FOR MASTER
  # ########################
  # client in master?
  - if: type IN (pull_request)
    os: linux
    script:
    - cd client
    - COMMIT=$(git rev-parse HEAD)
    - BRANCHES=$(git branch -r --contains ${COMMIT})
    - ORIGINMASTER='origin/master'
    - if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then exit 0; else exit 1; fi
  # server in master?
  - if: type IN (pull_request)
    os: linux
    script:
    - cd server
    - COMMIT=$(git rev-parse HEAD)
    - BRANCHES=$(git branch -r --contains ${COMMIT})
    - ORIGINMASTER='origin/master'
    - if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then exit 0; else exit 1; fi
  # bundestag.io in master?
  - if: type IN (pull_request)
    os: linux
    script:
    - cd bundestag.io
    - COMMIT=$(git rev-parse HEAD)
    - BRANCHES=$(git branch -r --contains ${COMMIT})
    - ORIGINMASTER='origin/master'
    - if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then exit 0; else exit 1; fi
  # elasticsearch in master?
  - if: type IN (pull_request)
    os: linux
    script:
    - cd elasticsearch
    - COMMIT=$(git rev-parse HEAD)
    - BRANCHES=$(git branch -r --contains ${COMMIT})
    - ORIGINMASTER='origin/master'
    - if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then exit 0; else exit 1; fi
  
  # ########################
  # DEPLOY INTERNAL
  # ########################
  # server deploy internal
  - if: tag =~ -internal\+server
    os: linux
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    script:
    # build docker-compose
    - docker-compose build
    # build doctl
    - docker build -t doctl --build-arg SSH_KEY="$(cat ./.travis/ssh_key)" --build-arg SSH_KEY_PUB="$(cat ./.travis/ssh_key.pub)" --build-arg HOST_IP="${DIGITAL_OCEAN_INTERNAL_HOST}" - < ./doctl
    # run ssh command using doctl
    - docker run --rm -e DIGITALOCEAN_ACCESS_TOKEN="${DIGITALOCEAN_ACCESS_TOKEN}" doctl compute ssh ${DIGITALOCEAN_INTERNAL_SERVER_DROPLET_NAME} --ssh-user ${DIGITALOCEAN_INTERNAL_SERVER_USER} --ssh-command "cd ~/democracy-development && ./deploy-production.sh $TRAVIS_TAG"
    after_success:
    - ./.travis/discord.sh -t "Success Internal $TRAVIS_TAG" -d "[Server] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Internal $TRAVIS_TAG" -d "[Server] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error
  # android deploy internal
  - if: tag =~ -internal\+client
    os: linux
    language: android
    jdk: oraclejdk8
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    - cd client/android
    - gem update --system
    - bundle install
    - bundle update fastlane
    install:
    - cd ..
    - nvm install 8
    - yarn --version
    - yarn install
    android:
      components:
      - tools
      - platform-tools
      # android 23,25,26
      - build-tools-23.0.1
      - build-tools-25.0.0
      - build-tools-25.0.1
      - build-tools-25.0.2
      - build-tools-26.0.1
      - build-tools-26.0.2
      - android-23
      - android-25
      - android-26
      # extra
      - extra-android-m2repository
      - extra-google-google_play_services
      - extra-google-m2repository
      - addon-google_apis-google-16
      licenses:
      - 'android-sdk-preview-license-.+'
      - 'android-sdk-license-.+'
      - 'google-gdk-license-.+'
    script:
    - cd android && bundle exec fastlane android internal
    after_success:
    - ./.travis/discord.sh -t "Success Internal $TRAVIS_TAG" -d "[Android] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Internal $TRAVIS_TAG" -d "[Android] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error
  # ios deploy internal
  - if: tag =~ -internal\+client
    osx_image: xcode9.2
    language: objective-c
    xcode_project: ios/democracyclient.xcodeproj
    xcode_scheme: ios/democracyclientTests
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    - cd client/ios
    - gem update --system
    - bundle install
    - bundle update fastlane
    install:
    - cd ..
    - nvm install 8
    - npm install -g yarn
    - yarn --version
    - yarn install
    script:
    - cd ios
    - DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS="-t DAV" bundle exec fastlane ios internal
    after_success:
    - ./.travis/discord.sh -t "Success Internal $TRAVIS_TAG" -d "[iOS] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Internal $TRAVIS_TAG" -d "[iOS] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error

  # ########################
  # DEPLOY ALPHA
  # ########################
  # server deploy alpha
  - if: tag =~ -alpha\+server
    os: linux
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    script:
    - docker-compose build
    - docker build -t doctl --build-arg SSH_KEY="$(cat ./.travis/ssh_key)" --build-arg SSH_KEY_PUB="$(cat ./.travis/ssh_key.pub)" --build-arg HOST_IP="${DIGITAL_OCEAN_ALPHA_HOST}" - < ./doctl
    - docker run --rm -e DIGITALOCEAN_ACCESS_TOKEN="${DIGITALOCEAN_ACCESS_TOKEN}" doctl compute ssh ${DIGITALOCEAN_ALPHA_SERVER_DROPLET_NAME} --ssh-user ${DIGITALOCEAN_ALPHA_SERVER_USER} --ssh-command "cd ~/democracy-development && ./deploy-production.sh $TRAVIS_TAG"
    after_success:
    - ./.travis/discord.sh -t "Success Alpha $TRAVIS_TAG" -d "[Server] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Alpha $TRAVIS_TAG" -d "[Server] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error
  # android deploy alpha
  - if: tag =~ -alpha\+client
    os: linux
    language: android
    jdk: oraclejdk8
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    - cd client/android
    - gem update --system
    - bundle install
    - bundle update fastlane
    install:
    - cd ..
    - nvm install 8
    - yarn --version
    - yarn install
    android:
      components:
      - tools
      - platform-tools
      # android 23,25,26
      - build-tools-23.0.1
      - build-tools-25.0.0
      - build-tools-25.0.1
      - build-tools-25.0.2
      - build-tools-26.0.1
      - build-tools-26.0.2
      - android-23
      - android-25
      - android-26
      # extra
      - extra-android-m2repository
      - extra-google-google_play_services
      - extra-google-m2repository
      - addon-google_apis-google-16
      licenses:
      - 'android-sdk-preview-license-.+'
      - 'android-sdk-license-.+'
      - 'google-gdk-license-.+'
    script:
    - cd android && bundle exec fastlane android alpha
    after_success:
    - ./.travis/discord.sh -t "Success Alpha $TRAVIS_TAG" -d "[Android] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Alpha $TRAVIS_TAG" -d "[Android] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error
  # ios deploy alpha
  - if: tag =~ -alpha\+client
    osx_image: xcode9.2
    language: objective-c
    xcode_project: ios/democracyclient.xcodeproj
    xcode_scheme: ios/democracyclientTests
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    - cd client/ios
    - gem update --system
    - bundle install
    - bundle update fastlane
    install:
    - cd ..
    - nvm install 8
    - npm install -g yarn
    - yarn --version
    - yarn install
    script:
    - cd ios
    - DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS="-t DAV" bundle exec fastlane ios alpha
    after_success:
    - ./.travis/discord.sh -t "Success Alpha $TRAVIS_TAG" -d "[iOS] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Alpha $TRAVIS_TAG" -d "[iOS] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error
  
  # ########################
  # DEPLOY BETA
  # ########################
  # server deploy beta
  - if: tag =~ -beta\+server
    os: linux
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    script:
    # ensure we are on the master branch - this does not work for some reason???
    #- COMMIT=$(git rev-parse HEAD)
    #- BRANCHES=$(git branch -r --contains ${COMMIT})
    #- ORIGINMASTER='origin/master'
    #- if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then echo "ok" ; else exit 1; fi
    # build docker-compose
    - docker-compose build
    # build doctl
    - docker build -t doctl --build-arg SSH_KEY="$(cat ./.travis/ssh_key)" --build-arg SSH_KEY_PUB="$(cat ./.travis/ssh_key.pub)" --build-arg HOST_IP="${DIGITAL_OCEAN_BETA_HOST}" - < ./doctl
    # run ssh command using doctl
    - docker run --rm -e DIGITALOCEAN_ACCESS_TOKEN="${DIGITALOCEAN_ACCESS_TOKEN}" doctl compute ssh ${DIGITALOCEAN_BETA_SERVER_DROPLET_NAME} --ssh-user ${DIGITALOCEAN_BETA_SERVER_USER} --ssh-command "cd ~/democracy-development && ./deploy-production.sh $TRAVIS_TAG"
    after_success:
    - ./.travis/discord.sh -t "Success Beta $TRAVIS_TAG" -d "[Server] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Beta $TRAVIS_TAG" -d "[Server] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error
  # android deploy beta
  - if: tag =~ -beta\+client
    os: linux
    language: android
    jdk: oraclejdk8
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    - cd client/android
    - gem update --system
    - bundle install
    - bundle update fastlane
    install:
    - cd ..
    - nvm install 8
    - yarn --version
    - yarn install
    android:
      components:
      - tools
      - platform-tools
      # android 23,25,26
      - build-tools-23.0.1
      - build-tools-25.0.0
      - build-tools-25.0.1
      - build-tools-25.0.2
      - build-tools-26.0.1
      - build-tools-26.0.2
      - android-23
      - android-25
      - android-26
      # extra
      - extra-android-m2repository
      - extra-google-google_play_services
      - extra-google-m2repository
      - addon-google_apis-google-16
      licenses:
      - 'android-sdk-preview-license-.+'
      - 'android-sdk-license-.+'
      - 'google-gdk-license-.+'
    script:
    # ensure we are on the master branch
    - COMMIT=$(git rev-parse HEAD)
    - BRANCHES=$(git branch -r --contains ${COMMIT})
    - ORIGINMASTER='origin/master'
    - if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then echo "ok" ; else exit 1; fi
    # build android & publish using fastlane
    - cd android && bundle exec fastlane android beta
    after_success:
    - ./.travis/discord.sh -t "Success Beta $TRAVIS_TAG" -d "[Android] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Beta $TRAVIS_TAG" -d "[Android] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error
  # ios deploy beta
  - if: tag =~ -beta\+client
    osx_image: xcode9.2
    language: objective-c
    xcode_project: ios/democracyclient.xcodeproj
    xcode_scheme: ios/democracyclientTests
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    - cd client/ios
    - gem update --system
    - bundle install
    - bundle update fastlane
    install:
    - cd ..
    - nvm install 8
    - npm install -g yarn
    - yarn --version
    - yarn install
    script:
    # ensure we are on the master branch
    - COMMIT=$(git rev-parse HEAD)
    - BRANCHES=$(git branch -r --contains ${COMMIT})
    - ORIGINMASTER='origin/master'
    - if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then echo "ok" ; else exit 1; fi
    # build ios and publish using fastlane
    - cd ios
    - DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS="-t DAV" bundle exec fastlane ios beta
    after_success:
    - ./.travis/discord.sh -t "Success Beta $TRAVIS_TAG" -d "[iOS] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Beta $TRAVIS_TAG" -d "[iOS] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error

  # ########################
  # DEPLOY PRODUCTION
  # ########################
  # server deploy production
  - if: tag =~ -production\+server
    os: linux
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    script:
    # ensure we are on the master branch - this does not work for some reason???
    #- COMMIT=$(git rev-parse HEAD)
    #- BRANCHES=$(git branch -r --contains ${COMMIT})
    #- ORIGINMASTER='origin/master'
    #- if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then echo "ok" ; else exit 1; fi
    # build docker-compose
    - docker-compose build
    # build doctl
    - docker build -t doctl --build-arg SSH_KEY="$(cat ./.travis/ssh_key)" --build-arg SSH_KEY_PUB="$(cat ./.travis/ssh_key.pub)" --build-arg HOST_IP="${DIGITAL_OCEAN_PRODUCTION_HOST}" - < ./doctl
    # run ssh command using doctl
    - docker run --rm -e DIGITALOCEAN_ACCESS_TOKEN="${DIGITALOCEAN_ACCESS_TOKEN}" doctl compute ssh ${DIGITALOCEAN_PRODUCTION_SERVER_DROPLET_NAME} --ssh-user ${DIGITALOCEAN_PRODUCTION_SERVER_USER} --ssh-command "cd ~/democracy-development && ./deploy-production.sh $TRAVIS_TAG"
    after_success:
    - ./.travis/discord.sh -t "Success Production $TRAVIS_TAG" -d "[Server] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Production $TRAVIS_TAG" -d "[Server] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error
  # android deploy production
  - if: tag =~ -production\+client
    os: linux
    language: android
    jdk: oraclejdk8
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    - cd client/android
    - gem update --system
    - bundle install
    - bundle update fastlane
    install:
    - cd ..
    - nvm install 8
    - yarn --version
    - yarn install
    android:
      components:
      - tools
      - platform-tools
      # android 23,25,26
      - build-tools-23.0.1
      - build-tools-25.0.0
      - build-tools-25.0.1
      - build-tools-25.0.2
      - build-tools-26.0.1
      - build-tools-26.0.2
      - android-23
      - android-25
      - android-26
      # extra
      - extra-android-m2repository
      - extra-google-google_play_services
      - extra-google-m2repository
      - addon-google_apis-google-16
      licenses:
      - 'android-sdk-preview-license-.+'
      - 'android-sdk-license-.+'
      - 'google-gdk-license-.+'
    script:
    # ensure we are on the master branch
    #- COMMIT=$(git rev-parse HEAD)
    #- BRANCHES=$(git branch -r --contains ${COMMIT})
    #- ORIGINMASTER='origin/master'
    #- if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then echo "ok" ; else exit 1; fi
    # build android & publish using fastlane
    - cd android && bundle exec fastlane android production
    after_success:
    - ./.travis/discord.sh -t "Success Production $TRAVIS_TAG" -d "[Android] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Production $TRAVIS_TAG" -d "[Android] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error
  # ios deploy production
  - if: tag =~ -production\+client
    osx_image: xcode9.2
    language: objective-c
    xcode_project: ios/democracyclient.xcodeproj
    xcode_scheme: ios/democracyclientTests
    before_install:
    - ./.travis/decrypt.sh
    - source ./.travis/env.sh
    - cd client/ios
    - gem update --system
    - bundle install
    - bundle update fastlane
    install:
    - cd ..
    - nvm install 8
    - npm install -g yarn
    - yarn --version
    - yarn install
    script:
    # ensure we are on the master branch
    #- COMMIT=$(git rev-parse HEAD)
    #- BRANCHES=$(git branch -r --contains ${COMMIT})
    #- ORIGINMASTER='origin/master'
    #- if `echo ${BRANCHES} | grep "${ORIGINMASTER}" 1>/dev/null 2>&1`; then echo "ok" ; else exit 1; fi
    # build ios and publish using fastlane
    - cd ios
    - DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS="-t DAV" bundle exec fastlane ios production
    after_success:
    - ./.travis/discord.sh -t "Success Production $TRAVIS_TAG" -d "[iOS] Deployed Build $BUILD_NUMBER on Tag $TRAVIS_TAG successful" -c info
    after_failure:
    - ./.travis/discord.sh -t "Failure Production $TRAVIS_TAG" -d "[iOS] Deploy Build $BUILD_NUMBER on Tag $TRAVIS_TAG failed" -c error

  # TEST
  - if: tag =~ test
    os: linux
    before_install:
    - ./.travis/decrypt.sh
    - set -o allexport
    - source ./.travis/env.sh
    - set +o allexport
    script:
    - ./.travis/gitbranch.sh -d "./" -b "origin/master"
    - ./.travis/gitbranch.sh -d "./" -b "origin/sprint#35/deployment"
    - ./.travis/gitbranch.sh -d "./client" -b "origin/master"
    - ./.travis/gitbranch.sh -d "./bundestag.io0" -b "origin/master"
    - ./.travis/gitbranch.sh -d "./server" -b "origin/master"
    - ./.travis/discord.sh -t "SUCCESS Test" -d "Test $TRAVIS_TAG" -c info
    - ./.travis/discord.sh -t "FAILURE Test" -d "Test $TRAVIS_TAG" -c error
    - ./.travis/discord.sh -t "??? Test" -d "Test $TRAVIS_TAG" -c warn
    #- docker-compose build
    #- docker build -t doctl --build-arg SSH_KEY="$(cat ./ssh_key)" --build-arg SSH_KEY_PUB="$(cat ./ssh_key.pub)" --build-arg HOST_IP="${DIGITAL_OCEAN_ALPHA_HOST}" - < ./doctl
    #- docker run --rm -e DIGITALOCEAN_ACCESS_TOKEN="${DIGITALOCEAN_ACCESS_TOKEN}" doctl compute ssh ${DIGITALOCEAN_ALPHA_SERVER_DROPLET_NAME} --ssh-user ${DIGITALOCEAN_ALPHA_SERVER_USER} --ssh-command "cd ~/democracy-development && ./deploy-production.sh $TRAVIS_TAG"
    #after_success:
    #- 'curl -H ''Content-Type: application/json''  -X POST -d "{\"content\":\"SUCCESS: New Server Alpha Version $TRAVIS_TAG deployed!\"}" ${DISCORD_WEBHOOK}'
    #after_failure:
    #- 'curl -H ''Content-Type: application/json''  -X POST -d "{\"content\":\"FAILURE: Deploying new Server Alpha Version $TRAVIS_TAG failed!\"}" ${DISCORD_WEBHOOK}'
after_script:
- echo "BUILD FINISHED"